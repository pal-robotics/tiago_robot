<launch>
  <arg name="arm" default="true"/>
  <arg name="base_type_suffix" default=""/>

  <rosparam command="load" file="$(find tiago_controller_configuration)/config/joint_trajectory_controllers.yaml" />
  <rosparam command="load" file="$(find tiago_controller_configuration)/config/current_limit_controllers$(arg base_type_suffix).yaml"/>
  <rosparam command="load" ns="joint_state_controller" file="$(find tiago_controller_configuration)/config/joint_state_controller_extra_joints$(arg base_type_suffix).yaml"/>
  <rosparam command="load" ns="joint_torque_sensor_state_controller" file="$(find tiago_controller_configuration)/config/joint_state_controller_extra_joints$(arg base_type_suffix).yaml"/>

  <!-- Set up controllers depending of arm existance -->
  <arg name="controller_list" if="$(arg arm)"
       value="torso_controller
              head_controller
              arm_controller
              arm_current_limit_controller
              mobile_base_controller
              wheels_current_limit_controller"/>
  <arg name="controller_list" unless="$(arg arm)"
       value="torso_controller
              head_controller
              mobile_base_controller
              wheels_current_limit_controller"/>

  <!-- Controllers that come up started -->
  <node name="default_controllers_spawner"
        pkg="controller_manager" type="spawner" output="screen"
        args="--timeout 120 $(arg controller_list)" />

  <!-- Point head action -->
  <group ns="head_controller">
    <node name="point_head_action" pkg="head_action" type="head_action" output="screen">
      <rosparam>
        pan_link:  head_1_link
        tilt_link: head_2_link
        success_angle_threshold: 0.05
      </rosparam>
    </node>
  </group>
</launch>
